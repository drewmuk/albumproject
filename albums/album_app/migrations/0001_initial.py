# Generated by Django 4.2.5 on 2023-09-10 22:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('artist_id', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(choices=[('Option1', 'Option 1'), ('Option2', 'Option 2')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SpotifyToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=255)),
                ('refresh_token', models.CharField(max_length=255)),
                ('token_type', models.CharField(max_length=50)),
                ('expires_at', models.DateTimeField()),
                ('last_refreshed', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('duration', models.FloatField()),
                ('number', models.IntegerField()),
                ('song_id', models.CharField(max_length=255)),
                ('artists', models.ManyToManyField(related_name='song_artists', to='album_app.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('pop', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('cover', models.CharField(max_length=255)),
                ('album_id', models.CharField(max_length=255)),
                ('language', models.CharField(max_length=255)),
                ('acousticness', models.FloatField()),
                ('danceability', models.FloatField()),
                ('energy', models.FloatField()),
                ('instrumentalness', models.FloatField()),
                ('loudness', models.FloatField()),
                ('mode', models.FloatField()),
                ('speechiness', models.FloatField()),
                ('tempo', models.FloatField()),
                ('valence', models.FloatField()),
                ('liveness', models.FloatField()),
                ('artists', models.ManyToManyField(related_name='album_artists', to='album_app.artist')),
                ('genres', models.ManyToManyField(related_name='album_genre', to='album_app.genre')),
                ('songs', models.ManyToManyField(related_name='albums_songs', to='album_app.song')),
            ],
        ),
    ]
